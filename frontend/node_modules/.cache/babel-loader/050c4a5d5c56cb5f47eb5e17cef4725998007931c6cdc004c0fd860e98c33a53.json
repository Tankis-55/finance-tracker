{"ast":null,"code":"var _jsxFileName = \"/Users/tatianakister/finance-tracker/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ExpenseForm from \"../components/ExpenseForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://finance-tracker-api.onrender.com/api\";\nconst Dashboard = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [filterCategory, setFilterCategory] = useState(\"\");\n  const [sortType, setSortType] = useState(\"amount\");\n  const [category, setCategory] = useState(\"\");\n  const fetchTransactions = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/transactions`);\n      setTransactions(response.data);\n    } catch (error) {\n      console.error(\"Ошибка загрузки транзакций:\", error);\n    }\n  };\n\n  // Функция для обновления списка транзакций при добавлении новой\n  const handleAddTransaction = () => {\n    setRefresh(!refresh);\n  };\n  useEffect(() => {\n    fetchTransactions();\n  }, [refresh]);\n  const filteredTransactions = transactions.filter(tx => filterCategory ? tx.category === filterCategory : true);\n  const sortedTransactions = [...filteredTransactions].sort((a, b) => {\n    if (sortType === \"amount\") {\n      return b.amount - a.amount;\n    } else if (sortType === \"date\") {\n      return new Date(b.date) - new Date(a.date);\n    }\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onTransactionAdded: handleAddTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-sort\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setFilterCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\u0412\\u0441\\u0435 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Food\",\n          children: \"\\u0415\\u0434\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Transport\",\n          children: \"\\u0422\\u0440\\u0430\\u043D\\u0441\\u043F\\u043E\\u0440\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Shopping\",\n          children: \"\\u041F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSortType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"amount\",\n          children: \"\\u041F\\u043E \\u0441\\u0443\\u043C\\u043C\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"date\",\n          children: \"\\u041F\\u043E \\u0434\\u0430\\u0442\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: transactions.map((t, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [t.category, \": \", t.amount, \" \", t.currency]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: category,\n      onChange: e => setCategory(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\\u0422\\u0440\\u0430\\u043D\\u0441\\u043F\\u043E\\u0440\\u0442\",\n        children: \"\\u0422\\u0440\\u0430\\u043D\\u0441\\u043F\\u043E\\u0440\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\\u041F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0438\",\n        children: \"\\u041F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"OZ7lk3ofU6WsJtAbe/Z23VR+3cI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","ExpenseForm","jsxDEV","_jsxDEV","API_URL","Dashboard","_s","transactions","setTransactions","refresh","setRefresh","filterCategory","setFilterCategory","sortType","setSortType","category","setCategory","fetchTransactions","response","get","data","error","console","handleAddTransaction","filteredTransactions","filter","tx","sortedTransactions","sort","a","b","amount","Date","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onTransactionAdded","onChange","e","target","value","map","t","index","currency","_c","$RefreshReg$"],"sources":["/Users/tatianakister/finance-tracker/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ExpenseForm from \"../components/ExpenseForm\";\n\nconst API_URL = \"https://finance-tracker-api.onrender.com/api\";\n\nconst Dashboard = () => {\n    const [transactions, setTransactions] = useState([]);\n    const [refresh, setRefresh] = useState(false);\n    const [filterCategory, setFilterCategory] = useState(\"\"); \n    const [sortType, setSortType] = useState(\"amount\"); \n    const [category, setCategory] = useState(\"\"); \n\n    const fetchTransactions = async () => {\n        try {\n            const response = await axios.get(`${API_URL}/transactions`);\n            setTransactions(response.data);\n        } catch (error) {\n            console.error(\"Ошибка загрузки транзакций:\", error);\n        }\n    };\n\n    // Функция для обновления списка транзакций при добавлении новой\n    const handleAddTransaction = () => {\n        setRefresh(!refresh); \n    };\n\n    useEffect(() => {\n        fetchTransactions();\n    }, [refresh]); \n\n    const filteredTransactions = transactions.filter((tx) =>\n        filterCategory ? tx.category === filterCategory : true\n    );\n\n    const sortedTransactions = [...filteredTransactions].sort((a, b) => {\n        if (sortType === \"amount\") {\n            return b.amount - a.amount;\n        } else if (sortType === \"date\") {\n            return new Date(b.date) - new Date(a.date);\n        }\n        return 0;\n    });\n\n    return (\n        <div className=\"container\">\n            <h1>Dashboard</h1>\n            <ExpenseForm onTransactionAdded={handleAddTransaction} />\n\n            <div className=\"filter-sort\">\n                <select onChange={(e) => setFilterCategory(e.target.value)}>\n                    <option value=\"\">Все категории</option>\n                    <option value=\"Food\">Еда</option>\n                    <option value=\"Transport\">Транспорт</option>\n                    <option value=\"Shopping\">Покупки</option>\n                </select>\n\n                <select onChange={(e) => setSortType(e.target.value)}>\n                    <option value=\"amount\">По сумме</option>\n                    <option value=\"date\">По дате</option>\n                </select>\n            </div>\n\n            <h2>Список транзакций</h2>\n            <ul>\n  {transactions.map((t, index) => (\n    <li key={index}>{t.category}: {t.amount} {t.currency}</li>\n  ))}\n</ul>\n\n            <select value={category} onChange={(e) => setCategory(e.target.value)}>\n                <option value=\"Транспорт\">Транспорт</option>\n                <option value=\"Покупки\">Покупки</option>\n            </select>\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,OAAO,GAAG,8CAA8C;AAE9D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,QAAQ,CAAC;EAClD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMkB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,GAAGf,OAAO,eAAe,CAAC;MAC3DI,eAAe,CAACU,QAAQ,CAACE,IAAI,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EACJ,CAAC;;EAED;EACA,MAAME,oBAAoB,GAAGA,CAAA,KAAM;IAC/Bb,UAAU,CAAC,CAACD,OAAO,CAAC;EACxB,CAAC;EAEDX,SAAS,CAAC,MAAM;IACZmB,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACR,OAAO,CAAC,CAAC;EAEb,MAAMe,oBAAoB,GAAGjB,YAAY,CAACkB,MAAM,CAAEC,EAAE,IAChDf,cAAc,GAAGe,EAAE,CAACX,QAAQ,KAAKJ,cAAc,GAAG,IACtD,CAAC;EAED,MAAMgB,kBAAkB,GAAG,CAAC,GAAGH,oBAAoB,CAAC,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAChE,IAAIjB,QAAQ,KAAK,QAAQ,EAAE;MACvB,OAAOiB,CAAC,CAACC,MAAM,GAAGF,CAAC,CAACE,MAAM;IAC9B,CAAC,MAAM,IAAIlB,QAAQ,KAAK,MAAM,EAAE;MAC5B,OAAO,IAAImB,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC,GAAG,IAAID,IAAI,CAACH,CAAC,CAACI,IAAI,CAAC;IAC9C;IACA,OAAO,CAAC;EACZ,CAAC,CAAC;EAEF,oBACI9B,OAAA;IAAK+B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBhC,OAAA;MAAAgC,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBpC,OAAA,CAACF,WAAW;MAACuC,kBAAkB,EAAEjB;IAAqB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEzDpC,OAAA;MAAK+B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBhC,OAAA;QAAQsC,QAAQ,EAAGC,CAAC,IAAK9B,iBAAiB,CAAC8B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAAAT,QAAA,gBACvDhC,OAAA;UAAQyC,KAAK,EAAC,EAAE;UAAAT,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvCpC,OAAA;UAAQyC,KAAK,EAAC,MAAM;UAAAT,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjCpC,OAAA;UAAQyC,KAAK,EAAC,WAAW;UAAAT,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5CpC,OAAA;UAAQyC,KAAK,EAAC,UAAU;UAAAT,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eAETpC,OAAA;QAAQsC,QAAQ,EAAGC,CAAC,IAAK5B,WAAW,CAAC4B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAAAT,QAAA,gBACjDhC,OAAA;UAAQyC,KAAK,EAAC,QAAQ;UAAAT,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxCpC,OAAA;UAAQyC,KAAK,EAAC,MAAM;UAAAT,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAENpC,OAAA;MAAAgC,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BpC,OAAA;MAAAgC,QAAA,EACT5B,YAAY,CAACsC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACzB5C,OAAA;QAAAgC,QAAA,GAAiBW,CAAC,CAAC/B,QAAQ,EAAC,IAAE,EAAC+B,CAAC,CAACf,MAAM,EAAC,GAAC,EAACe,CAAC,CAACE,QAAQ;MAAA,GAA3CD,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2C,CAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAEOpC,OAAA;MAAQyC,KAAK,EAAE7B,QAAS;MAAC0B,QAAQ,EAAGC,CAAC,IAAK1B,WAAW,CAAC0B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAAT,QAAA,gBAClEhC,OAAA;QAAQyC,KAAK,EAAC,wDAAW;QAAAT,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5CpC,OAAA;QAAQyC,KAAK,EAAC,4CAAS;QAAAT,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACjC,EAAA,CAtEID,SAAS;AAAA4C,EAAA,GAAT5C,SAAS;AAwEf,eAAeA,SAAS;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}