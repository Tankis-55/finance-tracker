{"ast":null,"code":"var _jsxFileName = \"/Users/tatianakister/finance-tracker/frontend/src/components/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://finance-tracker-api.onrender.com/api\";\nconst ExpenseForm = ({\n  onTransactionAdded\n}) => {\n  _s();\n  const [amount, setAmount] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newTransaction = {\n      category,\n      amount,\n      currency: \"USD\",\n      // или возьми из формы\n      date: new Date().toISOString()\n    };\n    onTransactionAdded(newTransaction);\n  };\n  const handleAddTransaction = async transaction => {\n    try {\n      await addTransaction(transaction);\n      setRefresh(!refresh); // Переключаем `refresh`, чтобы обновить список\n    } catch (error) {\n      console.error(\"Ошибка при добавлении транзакции:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"\\u0421\\u0443\\u043C\\u043C\\u0430\",\n      value: amount,\n      onChange: e => setAmount(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: category,\n      onChange: e => setCategory(e.target.value),\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Food\",\n        children: \"\\u0415\\u0434\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Transport\",\n        children: \"\\u0422\\u0440\\u0430\\u043D\\u0441\\u043F\\u043E\\u0440\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Shopping\",\n        children: \"\\u041F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onTransactionAdded: handleAddTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(ExpenseForm, \"tCTFWaUjj6cRroBH+L0SgfYkz/4=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_URL","ExpenseForm","onTransactionAdded","_s","amount","setAmount","category","setCategory","handleSubmit","e","preventDefault","newTransaction","currency","date","Date","toISOString","handleAddTransaction","transaction","addTransaction","setRefresh","refresh","error","console","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tatianakister/finance-tracker/frontend/src/components/ExpenseForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst API_URL = \"https://finance-tracker-api.onrender.com/api\";\n\nconst ExpenseForm = ({ onTransactionAdded }) => {\n    const [amount, setAmount] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const newTransaction = {\n            category,\n            amount,\n            currency: \"USD\", // или возьми из формы\n            date: new Date().toISOString(),\n        };\n        onTransactionAdded(newTransaction);\n    };\n    const handleAddTransaction = async (transaction) => {\n        try {\n            await addTransaction(transaction); \n            setRefresh(!refresh); // Переключаем `refresh`, чтобы обновить список\n        } catch (error) {\n            console.error(\"Ошибка при добавлении транзакции:\", error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"number\"\n                placeholder=\"Сумма\"\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n                required\n            />\n            <select value={category} onChange={(e) => setCategory(e.target.value)} required>\n                <option value=\"\">Выберите категорию</option>\n                <option value=\"Food\">Еда</option>\n                <option value=\"Transport\">Транспорт</option>\n                <option value=\"Shopping\">Покупки</option>\n            </select>\n            <button type=\"submit\">Добавить</button>\n            <ExpenseForm onTransactionAdded={handleAddTransaction} />\n        </form>\n    );\n};\n\nexport default ExpenseForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}