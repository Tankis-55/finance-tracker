{"ast":null,"code":"var _jsxFileName = \"/Users/tatianakister/finance-tracker/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ExpenseForm from \"../components/ExpenseForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://finance-tracker-api.onrender.com/api\";\nconst Dashboard = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [filterCategory, setFilterCategory] = useState(\"\"); // Фильтр по категории\n  const [sortType, setSortType] = useState(\"amount\"); // Сортировка по умолчанию\n\n  const fetchTransactions = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/transactions`);\n      setTransactions(response.data);\n    } catch (error) {\n      console.error(\"Ошибка загрузки транзакций:\", error);\n    }\n  };\n  const deleteTransaction = async id => {\n    try {\n      await axios.delete(`${API_URL}/transactions/${id}`);\n      setRefresh(!refresh);\n    } catch (error) {\n      console.error(\"Ошибка удаления транзакции:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchTransactions();\n  }, [refresh]);\n\n  // Фильтруем по категории\n  const filteredTransactions = transactions.filter(tx => filterCategory ? tx.category === filterCategory : true);\n\n  // Сортируем по сумме или дате\n  const sortedTransactions = [...filteredTransactions].sort((a, b) => {\n    if (sortType === \"amount\") {\n      return b.amount - a.amount;\n    } else if (sortType === \"date\") {\n      return new Date(b.date) - new Date(a.date);\n    }\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onTransactionAdded: () => setRefresh(!refresh)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-sort\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setFilterCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\u0412\\u0441\\u0435 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Food\",\n          children: \"\\u0415\\u0434\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Transport\",\n          children: \"\\u0422\\u0440\\u0430\\u043D\\u0441\\u043F\\u043E\\u0440\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Shopping\",\n          children: \"\\u041F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSortType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"amount\",\n          children: \"\\u041F\\u043E \\u0441\\u0443\\u043C\\u043C\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"date\",\n          children: \"\\u041F\\u043E \\u0434\\u0430\\u0442\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sortedTransactions.map(tx => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"transaction-item\",\n        children: [tx.category, \": \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [tx.amount, \" \", tx.currency]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 28\n        }, this), \" (\", new Date(tx.date).toLocaleDateString(), \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: () => deleteTransaction(tx._id),\n          children: \"\\uD83D\\uDDD1 \\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, tx._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"q9/mh8ASHkzeqvWOSTSks5yI3M0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","ExpenseForm","jsxDEV","_jsxDEV","API_URL","Dashboard","_s","transactions","setTransactions","refresh","setRefresh","filterCategory","setFilterCategory","sortType","setSortType","fetchTransactions","response","get","data","error","console","deleteTransaction","id","delete","filteredTransactions","filter","tx","category","sortedTransactions","sort","a","b","amount","Date","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onTransactionAdded","onChange","e","target","value","map","currency","toLocaleDateString","onClick","_id","_c","$RefreshReg$"],"sources":["/Users/tatianakister/finance-tracker/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ExpenseForm from \"../components/ExpenseForm\";\n\nconst API_URL = \"https://finance-tracker-api.onrender.com/api\";\n\nconst Dashboard = () => {\n    const [transactions, setTransactions] = useState([]);\n    const [refresh, setRefresh] = useState(false);\n    const [filterCategory, setFilterCategory] = useState(\"\"); // Фильтр по категории\n    const [sortType, setSortType] = useState(\"amount\"); // Сортировка по умолчанию\n\n    const fetchTransactions = async () => {\n        try {\n            const response = await axios.get(`${API_URL}/transactions`);\n            setTransactions(response.data);\n        } catch (error) {\n            console.error(\"Ошибка загрузки транзакций:\", error);\n        }\n    };\n\n    const deleteTransaction = async (id) => {\n        try {\n            await axios.delete(`${API_URL}/transactions/${id}`);\n            setRefresh(!refresh);\n        } catch (error) {\n            console.error(\"Ошибка удаления транзакции:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchTransactions();\n    }, [refresh]);\n\n    // Фильтруем по категории\n    const filteredTransactions = transactions.filter((tx) =>\n        filterCategory ? tx.category === filterCategory : true\n    );\n\n    // Сортируем по сумме или дате\n    const sortedTransactions = [...filteredTransactions].sort((a, b) => {\n        if (sortType === \"amount\") {\n            return b.amount - a.amount;\n        } else if (sortType === \"date\") {\n            return new Date(b.date) - new Date(a.date);\n        }\n        return 0;\n    });\n\n    return (\n        <div className=\"container\">\n            <h1>Dashboard</h1>\n            <ExpenseForm onTransactionAdded={() => setRefresh(!refresh)} />\n\n            {/* Фильтр по категории */}\n            <div className=\"filter-sort\">\n                <select onChange={(e) => setFilterCategory(e.target.value)}>\n                    <option value=\"\">Все категории</option>\n                    <option value=\"Food\">Еда</option>\n                    <option value=\"Transport\">Транспорт</option>\n                    <option value=\"Shopping\">Покупки</option>\n                </select>\n\n                {/* Сортировка */}\n                <select onChange={(e) => setSortType(e.target.value)}>\n                    <option value=\"amount\">По сумме</option>\n                    <option value=\"date\">По дате</option>\n                </select>\n            </div>\n\n            <h2>Список транзакций</h2>\n            <ul>\n    {sortedTransactions.map((tx) => (\n        <li key={tx._id} className=\"transaction-item\">\n            {tx.category}: <strong>{tx.amount} {tx.currency}</strong> ({new Date(tx.date).toLocaleDateString()})\n            <button className=\"delete-btn\" onClick={() => deleteTransaction(tx._id)}>\n                🗑 Удалить\n            </button>\n        </li>\n    ))}\n</ul>\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}